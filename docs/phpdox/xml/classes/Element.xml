<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Element" namespace="" name="Element" abstract="false" final="false" start="12" end="87">
  <file path="C:/xampp/htdocs/atatusoft/Assegai/assegai/app/en-US/models" file="Element.php" realpath="C:/xampp/htdocs/atatusoft/Assegai/assegai/app/en-US/models/Element.php" size="2285" time="2016-09-26T22:16:20+02:00" unixtime="1474920980" sha1="2542e290312a18aa61caaf162f5a6f9b6052ab7f" relative="app/en-US/models/Element.php"/>
  <docblock>
    <description compact="The Element class represents an object of a Page. This class describes methods and properties common to all kinds of elements. Specific behaviors are described in classes which inherit from Element but add additional functionality."/>
    <author value="Andrew Masiye"/>
    <version value="1.0.0"/>
    <since value="1.0.0"/>
  </docblock>
  <extends full="Post" namespace="" name="Post"/>
  <implements full="iNode" namespace="" name="iNode"/>
  <member name="parent" type="{unknown}" default="" constant="null" visibility="private" line="15"/>
  <member name="children" type="array" default="" visibility="private" line="16"/>
  <member name="contents" type="string" default="&quot;&quot;" visibility="private" line="17"/>
  <member name="classes" type="string" default="''" visibility="public" line="19"/>
  <member name="width" visibility="public" line="20"/>
  <member name="height" visibility="public" line="21"/>
  <constructor name="__construct" start="23" end="26" abstract="false" final="false" static="false" visibility="public">
    <parameter name="db" byreference="false" type="{unknown}"/>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="append_child" start="33" end="35" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds the specified childNode argument as the last child to the current node.">If the argument referenced an existing node on the DOM gree, the node will
be detached from its current position and attached at the new position.</description>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
  <method name="remove_child" start="42" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes a child node from the current element, which must be a child of the current node."/>
      <param description="The id of the node." type="object" variable="$id">
        <type full="{int}" namespace="" name="{int}"/>
      </param>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
  <method name="get_children" start="51" end="54" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array containing all the child nodes that belong to this node."/>
      <return description="Returns an array containing all the child nodes that belong" type="object">to this node.<type full="{int}" namespace="" name="{int}"/></return>
    </docblock>
  </method>
  <method name="set_parent" start="60" end="63" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the parent node of this node to the given node."/>
      <param description="The new parent node." type="object" variable="$node">
        <type full="{Node}" namespace="" name="{Node}"/>
      </param>
    </docblock>
    <parameter name="node" byreference="false" type="{unknown}"/>
  </method>
  <method name="get_parent" start="69" end="72" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the parent node of this node or null if none exists."/>
      <return description="Returns the parent node of this node or null if none exists." type="object">
        <type full="{Node}" namespace="" name="{Node}"/>
      </return>
    </docblock>
  </method>
  <method name="clone_node" start="78" end="81" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clone a Node, and optionally, all of its contents. By default, it clones the content of the node."/>
    </docblock>
  </method>
  <method name="create_html_element" start="83" end="86" abstract="false" final="false" static="true" visibility="public"/>
  <parent full="Post" namespace="" name="Post">
    <member name="id" visibility="public" line="10"/>
    <member name="name" visibility="public" line="11"/>
    <member name="author" visibility="public" line="12"/>
    <member name="author_name" visibility="public" line="13"/>
    <member name="editors" visibility="public" line="14"/>
    <member name="created" visibility="public" line="15"/>
    <member name="modified" visibility="public" line="16"/>
    <member name="title" visibility="public" line="17"/>
    <member name="excerpt" visibility="public" line="18"/>
    <member name="content" visibility="public" line="19"/>
    <member name="status" visibility="public" line="20"/>
    <member name="type" visibility="public" line="21"/>
    <member name="tags" visibility="public" line="22"/>
    <member name="meta" visibility="public" line="23"/>
    <member name="db" visibility="protected" line="25"/>
    <member name="fetched_data" visibility="protected" line="26"/>
    <constructor name="__construct" start="29" end="50" abstract="false" final="false" static="false" visibility="public">
      <parameter name="db" byreference="false" type="{unknown}"/>
      <parameter name="id" byreference="false" type="{unknown}"/>
      <parameter name="type" byreference="false" type="string" default="''"/>
    </constructor>
    <method name="save_draft" start="56" end="60" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Updates the post without publishing."/>
        <return description="Returns true if save was successful, false otherwise." type="object">
          <type full="{boolean}" namespace="" name="{boolean}"/>
        </return>
      </docblock>
      <parameter name="data" byreference="false" type="array" default=""/>
      <inline>
        <comment value="Code" line="58"/>
      </inline>
    </method>
    <method name="publish" start="66" end="74" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Saves the draft and writes the changes to file."/>
        <return description="Returns true if publish was successful, false otherwise." type="object">
          <type full="{boolean}" namespace="" name="{boolean}"/>
        </return>
      </docblock>
      <inline>
        <comment value="Save the draft" line="68"/>
        <comment value="Do publishing" line="71"/>
      </inline>
    </method>
    <method name="delete" start="83" end="86" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Deletes a post."/>
        <param description="The database containing the post." type="object" variable="$db">
          <type full="{Database}" namespace="" name="{Database}"/>
        </param>
        <param description="The post id." type="object" variable="$id">
          <type full="{integer}" namespace="" name="{integer}"/>
        </param>
        <return description="Returns a status id of QUERY_EXEC_OK if successful or some" type="object">other error status code if failed.<type full="{integer}" namespace="" name="{integer}"/></return>
      </docblock>
      <parameter name="db" byreference="false" type="{unknown}"/>
      <parameter name="id" byreference="false" type="{unknown}"/>
    </method>
    <method name="get" start="94" end="108" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Returns an array of video posts given the specified filters."/>
        <param description="The database to get the post from." type="object" variable="$db">
          <type full="{Database}" namespace="" name="{Database}"/>
        </param>
        <param description="[Optional] The filters to apply to the pulled data." type="object" variable="$filters">
          <type full="{array}" namespace="" name="{array}"/>
        </param>
        <return description="Returns an array of posts." type="object">
          <type full="{array}" namespace="" name="{array}"/>
        </return>
      </docblock>
      <parameter name="db" byreference="false" type="{unknown}"/>
      <parameter name="filters" byreference="false" type="{unknown}" default="" constant="null"/>
    </method>
    <method name="create" start="116" end="133" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Inserts a new post into the Database."/>
        <param description="The databases where the new post will be created." type="object" variable="$db">
          <type full="{Dataabse}" namespace="" name="{Dataabse}"/>
        </param>
        <param description="The new post's data as an associative array." type="object" variable="$data">
          <type full="{array}" namespace="" name="{array}"/>
        </param>
        <return description="Returns true if creation succeeded, otherwise returns false." type="object">
          <type full="{boolean}" namespace="" name="{boolean}"/>
        </return>
      </docblock>
      <parameter name="db" byreference="false" type="{unknown}"/>
      <parameter name="data" byreference="false" type="array" default=""/>
    </method>
    <method name="get_totals" start="140" end="161" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Returns an array containing a breakdown of the total number of posts by type."/>
        <param description="The datase holding the posts." type="object" variable="$db">
          <type full="{Database}" namespace="" name="{Database}"/>
        </param>
        <return description="Returns an array containing post totals information or false if an error occured." type="object">
          <type full="{array}" namespace="" name="{array}"/>
        </return>
      </docblock>
      <parameter name="db" byreference="false" type="{unknown}"/>
    </method>
  </parent>
  <interface full="iNode" namespace="" name="iNode">
    <method name="append_child" start="13" end="13" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds the specified childNode argument as the last child to the current node.">If the argument referenced an existing node on the DOM gree, the node will
be detached from its current position and attached at the new position.</description>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
    <method name="remove_child" start="20" end="20" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes a child node from the current element, which must be a child of the current node."/>
      <param description="The id of the node." type="object" variable="$id">
        <type full="{int}" namespace="" name="{int}"/>
      </param>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
    <method name="get_children" start="27" end="27" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array containing all the child nodes that belong to this node."/>
      <return description="Returns an array containing all the child nodes that belong" type="object">to this node.<type full="{int}" namespace="" name="{int}"/></return>
    </docblock>
  </method>
    <method name="set_parent" start="33" end="33" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the parent node of this node to the given node."/>
      <param description="The new parent node." type="object" variable="$node">
        <type full="{Node}" namespace="" name="{Node}"/>
      </param>
    </docblock>
    <parameter name="node" byreference="false" type="{unknown}"/>
  </method>
    <method name="get_parent" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the parent node of this node or null if none exists."/>
      <return description="Returns the parent node of this node or null if none exists." type="object">
        <type full="{Node}" namespace="" name="{Node}"/>
      </return>
    </docblock>
  </method>
    <method name="clone_node" start="45" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clone a Node, and optionally, all of its contents. By default, it clones the content of the node."/>
    </docblock>
  </method>
  </interface>
</class>
