<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Page" namespace="" name="Page" abstract="false" final="false" start="9" end="154">
  <file path="C:/xampp/htdocs/atatusoft/Assegai/assegai/app/en-US/models" file="Page.php" realpath="C:/xampp/htdocs/atatusoft/Assegai/assegai/app/en-US/models/Page.php" size="4667" time="2016-09-26T15:17:54+02:00" unixtime="1474895874" sha1="8070888e286a65208f999a02d94219f5899dfbeb" relative="app/en-US/models/Page.php"/>
  <docblock>
    <description compact="This class provides a structured representation of all Posts that are of the type Page. It defines methods that allow access to these posts, so they can change the Page document structure, style and and content of the resulting coresponding HTML document views."/>
  </docblock>
  <extends full="Post" namespace="" name="Post"/>
  <implements full="iNode" namespace="" name="iNode"/>
  <member name="parent" type="{unknown}" default="" constant="null" visibility="protected" line="11"/>
  <member name="children" type="array" default="" visibility="protected" line="12"/>
  <member name="head" visibility="public" line="14"/>
  <member name="body" visibility="public" line="15"/>
  <member name="layout" visibility="public" line="16"/>
  <member name="styles" visibility="public" line="17"/>
  <constructor name="__construct" start="24" end="30" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructs a page from the given database given its id."/>
      <param description="The database containing the page." type="object" variable="$db">
        <type full="{Database}" namespace="" name="{Database}"/>
      </param>
      <param description="The page id." type="object" variable="$id">
        <type full="{integer}" namespace="" name="{integer}"/>
      </param>
    </docblock>
    <parameter name="db" byreference="false" type="{unknown}"/>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="append_child" start="40" end="53" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds the specified childNode argument as the last child to the current node.">If the argument referenced an existing node on the DOM gree, the node will
be detached from its current position and attached at the new position.</description>
      <param description="The child node to be appended to the list of children." type="object" variable="$child">
        <type full="{Post}" namespace="" name="{Post}"/>
      </param>
      <return description="Returns QUERY_EXEC_OK on success, or either QUERY_EXEC_ERR or" type="object">PARAM_TYPE_ERR on failure.<type full="{integer}" namespace="" name="{integer}"/></return>
    </docblock>
    <parameter name="child" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Append child to children array" line="45"/>
      <comment value="Update meta array to include new value for children array" line="48"/>
      <comment value="Turn meta into json and update this post's meta column to reflect the change" line="51"/>
    </inline>
  </method>
  <method name="remove_child" start="61" end="79" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes a child node from the current element, which must be a child of the current node."/>
      <param description="The child node." type="object" variable="$child">
        <type full="{iNode}" namespace="" name="{iNode}"/>
      </param>
      <return description="Returns true if the child exists or false otherwise." type="object">
        <type full="{boolean}" namespace="" name="{boolean}"/>
      </return>
    </docblock>
    <parameter name="child" byreference="false" type="{unknown}"/>
  </method>
  <method name="compare_id" start="81" end="84" abstract="false" final="false" static="false" visibility="public">
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
  <method name="get_children" start="91" end="94" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array containing all the child nodes that belong to this node."/>
      <return description="Returns an array containing all the child nodes that belong" type="object">to this node.<type full="{integer}" namespace="" name="{integer}"/></return>
    </docblock>
  </method>
  <method name="set_parent" start="100" end="103" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the parent node of this node to the given node."/>
      <param description="The new parent node." type="object" variable="$parent">
        <type full="{iNode}" namespace="" name="{iNode}"/>
      </param>
    </docblock>
    <parameter name="parent" byreference="false" type="{unknown}"/>
  </method>
  <method name="get_parent" start="109" end="112" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the parent node of this node or null if none exists."/>
      <return description="Returns the parent node of this node or null if none exists." type="object">
        <type full="{iNode}" namespace="" name="{iNode}"/>
      </return>
    </docblock>
  </method>
  <method name="clone_node" start="118" end="121" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clone a iNode, and optionally, all of its contents. By default, it clones the content of the node."/>
    </docblock>
  </method>
  <method name="get" start="129" end="153" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns an array of layouts."/>
      <param description="The database that holds the layout data." type="object" variable="$db">
        <type full="{Database}" namespace="" name="{Database}"/>
      </param>
      <param description="[Optional] The filters to apply to the query." type="object" variable="$filters">
        <type full="{array}" namespace="" name="{array}"/>
      </param>
      <return description="Returns an array of layouts or QUERY_EXEC_ERR on failure." type="object">
        <type full="{array}" namespace="" name="{array}"/>
      </return>
    </docblock>
    <parameter name="db" byreference="false" type="{unknown}"/>
    <parameter name="filters" byreference="false" type="array" default=""/>
  </method>
  <parent full="Post" namespace="" name="Post">
    <member name="id" visibility="public" line="10"/>
    <member name="name" visibility="public" line="11"/>
    <member name="author" visibility="public" line="12"/>
    <member name="author_name" visibility="public" line="13"/>
    <member name="editors" visibility="public" line="14"/>
    <member name="created" visibility="public" line="15"/>
    <member name="modified" visibility="public" line="16"/>
    <member name="title" visibility="public" line="17"/>
    <member name="excerpt" visibility="public" line="18"/>
    <member name="content" visibility="public" line="19"/>
    <member name="status" visibility="public" line="20"/>
    <member name="type" visibility="public" line="21"/>
    <member name="tags" visibility="public" line="22"/>
    <member name="meta" visibility="public" line="23"/>
    <member name="db" visibility="protected" line="25"/>
    <member name="fetched_data" visibility="protected" line="26"/>
    <constructor name="__construct" start="29" end="50" abstract="false" final="false" static="false" visibility="public">
      <parameter name="db" byreference="false" type="{unknown}"/>
      <parameter name="id" byreference="false" type="{unknown}"/>
      <parameter name="type" byreference="false" type="string" default="''"/>
    </constructor>
    <method name="save_draft" start="56" end="60" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Updates the post without publishing."/>
        <return description="Returns true if save was successful, false otherwise." type="object">
          <type full="{boolean}" namespace="" name="{boolean}"/>
        </return>
      </docblock>
      <parameter name="data" byreference="false" type="array" default=""/>
      <inline>
        <comment value="Code" line="58"/>
      </inline>
    </method>
    <method name="publish" start="66" end="74" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Saves the draft and writes the changes to file."/>
        <return description="Returns true if publish was successful, false otherwise." type="object">
          <type full="{boolean}" namespace="" name="{boolean}"/>
        </return>
      </docblock>
      <inline>
        <comment value="Save the draft" line="68"/>
        <comment value="Do publishing" line="71"/>
      </inline>
    </method>
    <method name="delete" start="83" end="86" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Deletes a post."/>
        <param description="The database containing the post." type="object" variable="$db">
          <type full="{Database}" namespace="" name="{Database}"/>
        </param>
        <param description="The post id." type="object" variable="$id">
          <type full="{integer}" namespace="" name="{integer}"/>
        </param>
        <return description="Returns a status id of QUERY_EXEC_OK if successful or some" type="object">other error status code if failed.<type full="{integer}" namespace="" name="{integer}"/></return>
      </docblock>
      <parameter name="db" byreference="false" type="{unknown}"/>
      <parameter name="id" byreference="false" type="{unknown}"/>
    </method>
    <method name="get" start="94" end="108" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Returns an array of video posts given the specified filters."/>
        <param description="The database to get the post from." type="object" variable="$db">
          <type full="{Database}" namespace="" name="{Database}"/>
        </param>
        <param description="[Optional] The filters to apply to the pulled data." type="object" variable="$filters">
          <type full="{array}" namespace="" name="{array}"/>
        </param>
        <return description="Returns an array of posts." type="object">
          <type full="{array}" namespace="" name="{array}"/>
        </return>
      </docblock>
      <parameter name="db" byreference="false" type="{unknown}"/>
      <parameter name="filters" byreference="false" type="{unknown}" default="" constant="null"/>
    </method>
    <method name="create" start="116" end="133" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Inserts a new post into the Database."/>
        <param description="The databases where the new post will be created." type="object" variable="$db">
          <type full="{Dataabse}" namespace="" name="{Dataabse}"/>
        </param>
        <param description="The new post's data as an associative array." type="object" variable="$data">
          <type full="{array}" namespace="" name="{array}"/>
        </param>
        <return description="Returns true if creation succeeded, otherwise returns false." type="object">
          <type full="{boolean}" namespace="" name="{boolean}"/>
        </return>
      </docblock>
      <parameter name="db" byreference="false" type="{unknown}"/>
      <parameter name="data" byreference="false" type="array" default=""/>
    </method>
    <method name="get_totals" start="140" end="161" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Returns an array containing a breakdown of the total number of posts by type."/>
        <param description="The datase holding the posts." type="object" variable="$db">
          <type full="{Database}" namespace="" name="{Database}"/>
        </param>
        <return description="Returns an array containing post totals information or false if an error occured." type="object">
          <type full="{array}" namespace="" name="{array}"/>
        </return>
      </docblock>
      <parameter name="db" byreference="false" type="{unknown}"/>
    </method>
  </parent>
  <interface full="iNode" namespace="" name="iNode">
    <method name="append_child" start="13" end="13" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds the specified childNode argument as the last child to the current node.">If the argument referenced an existing node on the DOM gree, the node will
be detached from its current position and attached at the new position.</description>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
    <method name="remove_child" start="20" end="20" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes a child node from the current element, which must be a child of the current node."/>
      <param description="The id of the node." type="object" variable="$id">
        <type full="{int}" namespace="" name="{int}"/>
      </param>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
    <method name="get_children" start="27" end="27" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an array containing all the child nodes that belong to this node."/>
      <return description="Returns an array containing all the child nodes that belong" type="object">to this node.<type full="{int}" namespace="" name="{int}"/></return>
    </docblock>
  </method>
    <method name="set_parent" start="33" end="33" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sets the parent node of this node to the given node."/>
      <param description="The new parent node." type="object" variable="$node">
        <type full="{Node}" namespace="" name="{Node}"/>
      </param>
    </docblock>
    <parameter name="node" byreference="false" type="{unknown}"/>
  </method>
    <method name="get_parent" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the parent node of this node or null if none exists."/>
      <return description="Returns the parent node of this node or null if none exists." type="object">
        <type full="{Node}" namespace="" name="{Node}"/>
      </return>
    </docblock>
  </method>
    <method name="clone_node" start="45" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clone a Node, and optionally, all of its contents. By default, it clones the content of the node."/>
    </docblock>
  </method>
  </interface>
</class>
