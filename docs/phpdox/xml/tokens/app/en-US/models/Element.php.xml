<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="C:/xampp/htdocs/atatusoft/Assegai/assegai/app/en-US/models" file="Element.php" realpath="C:/xampp/htdocs/atatusoft/Assegai/assegai/app/en-US/models/Element.php" size="2281" time="2016-09-23T07:52:40+02:00" unixtime="1474609960" sha1="9ddeeb3d589d9e9a88c55d6c05052975b630e331" relative="app/en-US/models/Element.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * The Element class represents an object of a Page. This class</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> * describes methods and properties common to all kinds of elements. Specific</token>
  </line>
  <line no="6">
    <token name="T_DOC_COMMENT"> * behaviors are described in classes which inherit from Element but add</token>
  </line>
  <line no="7">
    <token name="T_DOC_COMMENT"> * additional functionality.</token>
  </line>
  <line no="8">
    <token name="T_DOC_COMMENT"> * @author Andrew Masiye</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT"> * @version 1.0.0</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT"> * @since 1.0.0</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="12">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Element</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_EXTENDS">extends</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Post</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">iNode</token>
  </line>
  <line no="13">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="14"/>
  <line no="15">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$parent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="16">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$children</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="17">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$contents</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">""</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="18"/>
  <line no="19">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$classes</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="20">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$width</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="21">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$height</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22"/>
  <line no="23">
    <token name="T_WHITESPACE">  </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$db</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$id</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="24">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="25">
    <token name="T_WHITESPACE">    </token>
    <token name="T_STRING">parent</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">__construct</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$db</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$id</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="26">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// end __construct</token>
  </line>
  <line no="27"/>
  <line no="28">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="29">
    <token name="T_DOC_COMMENT">   * Adds the specified childNode argument as the last child to the current node.</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">   * If the argument referenced an existing node on the DOM gree, the node will</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">   * be detached from its current position and attached at the new position.</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">append_child</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$id</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="34">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="35">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// end append_child()</token>
  </line>
  <line no="36"/>
  <line no="37">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">   * Removes a child node from the current element, which must be a child of</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">   * the current node.</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">   * @param {int} $id The id of the node.</token>
  </line>
  <line no="41">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">remove_child</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$id</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// end remove_child()</token>
  </line>
  <line no="45"/>
  <line no="46">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="47">
    <token name="T_DOC_COMMENT">   * Returns an array containing all the child nodes that belong to this node.</token>
  </line>
  <line no="48">
    <token name="T_DOC_COMMENT">   * @return {int} Returns an array containing all the child nodes that belong</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">   * to this node.</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="51">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">get_children</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="52">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">children</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// end get_children()</token>
  </line>
  <line no="55"/>
  <line no="56">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="57">
    <token name="T_DOC_COMMENT">   * Sets the parent node of this node to the given node.</token>
  </line>
  <line no="58">
    <token name="T_DOC_COMMENT">   * @param {Node} $node The new parent node.</token>
  </line>
  <line no="59">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">set_parent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="61">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="62">
    <token name="T_WHITESPACE">    </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parent</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// end set_parent()</token>
  </line>
  <line no="64"/>
  <line no="65">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="66">
    <token name="T_DOC_COMMENT">   * Returns the parent node of this node or null if none exists.</token>
  </line>
  <line no="67">
    <token name="T_DOC_COMMENT">   * @return {Node} Returns the parent node of this node or null if none exists.</token>
  </line>
  <line no="68">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="69">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">get_parent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">parent</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="72">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// end get_parent()</token>
  </line>
  <line no="73"/>
  <line no="74">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="75">
    <token name="T_DOC_COMMENT">   * Clone a Node, and optionally, all of its contents. By default, it clones</token>
  </line>
  <line no="76">
    <token name="T_DOC_COMMENT">   * the content of the node.</token>
  </line>
  <line no="77">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="78">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">clone_node</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="79">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">    </token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">HTML</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">create_html_element</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// end  clone_node()</token>
  </line>
  <line no="82"/>
  <line no="83">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STATIC">static</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">create_html_element</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="85"/>
  <line no="86">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// end create_html_element()</token>
  </line>
  <line no="87">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="88"/>
  <line no="89"/>
  <line no="90">
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="91"/>
</source>
