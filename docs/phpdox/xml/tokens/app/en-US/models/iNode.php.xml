<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="C:/xampp/htdocs/atatusoft/Assegai/assegai/app/en-US/models" file="iNode.php" realpath="C:/xampp/htdocs/atatusoft/Assegai/assegai/app/en-US/models/iNode.php" size="1357" time="2016-09-16T21:32:26+02:00" unixtime="1474054346" sha1="95ed61f9180a721520d29df3aaf7225986fd199d" relative="app/en-US/models/iNode.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="4">
    <token name="T_DOC_COMMENT"> * The base class for all web elements.</token>
  </line>
  <line no="5">
    <token name="T_DOC_COMMENT"> */</token>
  </line>
  <line no="6">
    <token name="T_INTERFACE">interface</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">iNode</token>
  </line>
  <line no="7">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="8">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="9">
    <token name="T_DOC_COMMENT">   * Adds the specified childNode argument as the last child to the current node.</token>
  </line>
  <line no="10">
    <token name="T_DOC_COMMENT">   * If the argument referenced an existing node on the DOM gree, the node will</token>
  </line>
  <line no="11">
    <token name="T_DOC_COMMENT">   * be detached from its current position and attached at the new position.</token>
  </line>
  <line no="12">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="13">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">append_child</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$id</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="14"/>
  <line no="15">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="16">
    <token name="T_DOC_COMMENT">   * Removes a child node from the current element, which must be a child of</token>
  </line>
  <line no="17">
    <token name="T_DOC_COMMENT">   * the current node.</token>
  </line>
  <line no="18">
    <token name="T_DOC_COMMENT">   * @param {int} $id The id of the node.</token>
  </line>
  <line no="19">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="20">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">remove_child</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$id</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="21"/>
  <line no="22">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="23">
    <token name="T_DOC_COMMENT">   * Returns an array containing all the child nodes that belong to this node.</token>
  </line>
  <line no="24">
    <token name="T_DOC_COMMENT">   * @return {int} Returns an array containing all the child nodes that belong</token>
  </line>
  <line no="25">
    <token name="T_DOC_COMMENT">   * to this node.</token>
  </line>
  <line no="26">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="27">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">get_children</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="28"/>
  <line no="29">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="30">
    <token name="T_DOC_COMMENT">   * Sets the parent node of this node to the given node.</token>
  </line>
  <line no="31">
    <token name="T_DOC_COMMENT">   * @param {Node} $node The new parent node.</token>
  </line>
  <line no="32">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">set_parent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$node</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="34"/>
  <line no="35">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="36">
    <token name="T_DOC_COMMENT">   * Returns the parent node of this node or null if none exists.</token>
  </line>
  <line no="37">
    <token name="T_DOC_COMMENT">   * @return {Node} Returns the parent node of this node or null if none exists.</token>
  </line>
  <line no="38">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="39">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">get_parent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="40"/>
  <line no="41">
    <token name="T_WHITESPACE">  </token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="42">
    <token name="T_DOC_COMMENT">   * Clone a Node, and optionally, all of its contents. By default, it clones</token>
  </line>
  <line no="43">
    <token name="T_DOC_COMMENT">   * the content of the node.</token>
  </line>
  <line no="44">
    <token name="T_DOC_COMMENT">   */</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">  </token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">clone_node</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="46"/>
  <line no="47">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_COMMENT">// end interface iNode</token>
  </line>
  <line no="48"/>
  <line no="49"/>
  <line no="50">
    <token name="T_CLOSE_TAG">?&gt;</token>
  </line>
  <line no="51"/>
</source>
